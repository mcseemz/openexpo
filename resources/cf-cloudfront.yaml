AWSTemplateFormatVersion: '2010-09-09'
Description: This template deploys a Cloudfront distributions.
Parameters:
  Environment:
    Description: what environment we are deploying
    Type: String
    AllowedPattern: (dev|prod)
  DomainName:
    Description: Domain name for your website (example.com)
    Type: String
    Default: enter-your.domain
  BinaryPrefixName:
    Description: Prefix for binary domain (binary)
    Type: String
  DomainACMCertificate:
    Description: Domain ACM certificate covering base domain and subdomains
    Type: String
  CreateHostedZone:
    Description: Should we create hosted zone or it is already created
    Type: String
    AllowedValues:
      - "true"
      - "false"

Conditions:
  CreateProdResources: !Equals
    - !Ref 'Environment'
    - prod
  CreateDevResources: !Equals
    - !Ref 'Environment'
    - dev
  CreateHostedZoneResources: !Equals
    - !Ref 'CreateHostedZone'
    - "true"

Mappings:
  RegionMap:
    us-east-1:
      S3HostedZoneID: Z3AQBSTGFYJSTF
      S3AliasTarget: s3-website-us-east-1.amazonaws.com
    us-east-2:
      S3HostedZoneID: Z2O1EMRO9K5GLX
      S3AliasTarget: s3-website.us-east-2.amazonaws.com
    us-west-1:
      S3HostedZoneID: Z2F56UZL2M1ACD
      S3AliasTarget: s3-website-us-west-1.amazonaws.com
    us-west-2:
      S3HostedZoneID: Z3BJ6K6RIION7M
      S3AliasTarget: s3-website-us-west-2.amazonaws.com
    ca-central-1:
      S3HostedZoneID: Z1QDHH18159H29 
      S3AliasTarget: s3-website.ca-central-1.amazonaws.com
    ap-south-1:
      S3HostedZoneID: Z11RGJOFQNVJUP
      S3AliasTarget: s3-website.ap-south-1.amazonaws.com
    ap-northeast-2:
      S3HostedZoneID: Z3W03O7B5YMIYP
      S3AliasTarget: s3-website.ap-northeast-2.amazonaws.com
    ap-southeast-1:
      S3HostedZoneID: Z3O0J2DXBE1FTB
      S3AliasTarget: s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      S3HostedZoneID: Z1WCIGYICN2BYD
      S3AliasTarget: s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      S3HostedZoneID: Z2M4EHUR26P7ZW
      S3AliasTarget: s3-website-ap-northeast-1.amazonaws.com
    eu-central-1:
      S3HostedZoneID: Z21DNDUVLTQW6Q
      S3AliasTarget: s3-website.eu-central-1.amazonaws.com
    eu-west-1:
      S3HostedZoneID: Z1BKCTXD74EZPE
      S3AliasTarget: s3-website-eu-west-1.amazonaws.com
    eu-west-2:
      S3HostedZoneID: Z3GKZC51ZF0DB4
      S3AliasTarget: s3-website.eu-west-2.amazonaws.com
    sa-east-1:
      S3HostedZoneID: Z31GFT0UA1I2HV
      S3AliasTarget: s3-website-sa-east-1.amazonaws.com

Resources:

  TexHostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneConfig:
        Comment: 'General hosted zone for the domain'
      Name: !Ref 'DomainName'
      HostedZoneTags:
        - Key: 'creator'
          Value: 'CF template'

  TexCFDistributionS3Dev:
    Type: AWS::CloudFront::Distribution
    Description: create distribution, bind it to route53 domain and statics bucket
    Condition: CreateDevResources
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !ImportValue
              Fn::Sub: TexS3BucketStatics-${Environment}
            Id: !Sub 'openexpo-S3-statics-${Environment}'
            S3OriginConfig:
              OriginAccessIdentity: ''
        Enabled: true
        HttpVersion: http2
        Comment: TEX Cloudfront for statics
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: !Sub 'openexpo-S3-statics-${Environment}'
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          MinTTL: 0
          AllowedMethods:
            - HEAD
            - GET
          CachedMethods:
            - HEAD
            - GET
          SmoothStreaming: false
          DefaultTTL: 86400
          MaxTTL: 31536000
          Compress: false
          FieldLevelEncryptionId: ''
        CustomErrorResponses:
          - ErrorCode: 404
            ResponsePagePath: /index.html
            ResponseCode: '200'
            ErrorCachingMinTTL: 300
        PriceClass: PriceClass_All
        Restrictions:
          GeoRestriction:
            RestrictionType: none
      Tags:
        - Key: creator
          Value: mz
        - Key: purpose
          Value: proxy access to S3 statics
        - Key: environment
          Value: proxy access to S3 statics
  TexCFDistributionBinariesS3:
    Type: AWS::CloudFront::Distribution
    Description: create distribution, bind it to route53 domain and statics bucket
    DependsOn: TexHostedZone
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Select
            - 1
            - !Split
              - "//"
              - !ImportValue
                Fn::Sub: TexBinariesWebsiteURL-${Environment}
            Id: !Sub 'openexpo-S3-statics-${Environment}'
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: http2
        Comment: TEX Cloudfront for binaries
        DefaultRootObject: index.html
        Aliases:
          - !Sub '${BinaryPrefixName}.${DomainName}'
        DefaultCacheBehavior:
          TargetOriginId: !Sub 'openexpo-S3-statics-${Environment}'
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          MinTTL: 0
          AllowedMethods:
            - HEAD
            - DELETE
            - POST
            - GET
            - OPTIONS
            - PUT
            - PATCH
          CachedMethods:
            - HEAD
            - GET
          SmoothStreaming: false
          DefaultTTL: 86400
          MaxTTL: 31536000
          Compress: false
          FieldLevelEncryptionId: ''
        PriceClass: PriceClass_All
        Restrictions:
          GeoRestriction:
            RestrictionType: none
        ViewerCertificate:
          AcmCertificateArn: !Ref 'DomainACMCertificate'
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2018
      Tags:
        - Key: creator
          Value: mz
        - Key: purpose
          Value: proxy access to S3 binaries
        - Key: environment
          Value: !Ref 'Environment'

#  BinariesS3DNSName:
#    Type: AWS::Route53::RecordSet
#    Properties:
#      HostedZoneName: !Sub '${DomainName}.'
#      Comment: CNAME redirect custom name to CloudFront distribution
#      Name: !Sub 'binary-${Environment}.${DomainName}'
#      Type: CNAME
#      TTL: '900'
#      ResourceRecords:
#      - !GetAtt ['TexCFDistributionBinariesS3', 'DomainName']

  binaryBucketDNS:
    Type: AWS::Route53::RecordSetGroup
    DependsOn: TexHostedZone
    Properties:
      HostedZoneName: !Sub 
          - ${Domain}.
          - Domain: !Ref DomainName
      Comment: Zone apex alias.
      RecordSets:
      - 
        Name: !Sub '${BinaryPrefixName}.${DomainName}'
        Type: A
        AliasTarget:
          HostedZoneId: 'Z2FDTNDATAQYW2'
          DNSName: !GetAtt ['TexCFDistributionBinariesS3', 'DomainName']

Outputs:
  DistributionStatics:
    Description: Statics distribution
    Condition: CreateDevResources
    Value: !Ref 'TexCFDistributionS3Dev'
    Export:
      Name: !Sub 'TexCFDistribS3-${Environment}'
  DistributionBinaries:
    Description: Binaries tistribution
    Value: !Ref 'TexCFDistributionBinariesS3'
    Export:
      Name: !Sub 'TexCFDistribBinaryS3-${Environment}'
